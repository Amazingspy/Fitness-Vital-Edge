import { Credential, JwtTokenCredential } from 'zcatalyst-sdk-node/lib/utils/credential';
import { IRequestConfig } from 'zcatalyst-sdk-node/lib/utils/api-request';
import type { Cache } from 'zcatalyst-sdk-node/lib/cache/cache';
import type { Cron } from 'zcatalyst-sdk-node/lib/cron/cron';
import type { Datastore } from 'zcatalyst-sdk-node/lib/datastore/datastore';
import type { Filestore } from 'zcatalyst-sdk-node/lib/file/filestore';
import type { Email } from 'zcatalyst-sdk-node/lib/email/email';
import type { Search } from 'zcatalyst-sdk-node/lib/search/search';
import type { Functions } from 'zcatalyst-sdk-node/lib/functions/functions';
import type { UserManagement } from 'zcatalyst-sdk-node/lib/user-management/user-management';
import type { PushNotification } from 'zcatalyst-sdk-node/lib/push-notification/push-notification';
import type { Zia } from 'zcatalyst-sdk-node/lib/zia/zia';
import type { Circuit } from 'zcatalyst-sdk-node/lib/circuit/circuit';
import type { Connection } from 'zcatalyst-sdk-node/lib/connector/connection';
import type { ZCQL } from 'zcatalyst-sdk-node/lib/zcql/zcql';
import type { Smartbrowz } from 'zcatalyst-sdk-node/lib/smartbrowz';
import Stratus from 'zcatalyst-sdk-node/lib/stratus';
import type { QuickML } from 'zcatalyst-sdk-node/lib/quick-ml/quick-ml';
import type { JobScheduling } from 'zcatalyst-sdk-node/lib/job-scheduling';
import type { Pipeline } from 'zcatalyst-sdk-node/lib/pipeline';
import type NoSQL from 'zcatalyst-sdk-node/lib/no-sql';
export interface ICatalystAppConfig {
    projectId: string;
    projectKey: string;
    projectDomain: string;
    environment: string;
    projectSecretKey: string | undefined;
}
declare class CatalystAppInternals {
    credential: Credential;
    config?: Omit<ICatalystAppConfig, 'projectSecretKey'>;
    tokenOnly: boolean;
    tempCredential?: JwtTokenCredential;
    constructor(credential: Credential);
    private setOauthHeader;
    private setTicketHeader;
    authenticateRequest(req: IRequestConfig): Promise<void>;
}
export declare class CatalystApp extends CatalystAppInternals {
    private services;
    config: ICatalystAppConfig;
    constructor(options: {
        [x: string]: string | number | Credential;
    });
    cache(): Cache;
    cron(): Cron;
    jobScheduling(): JobScheduling;
    datastore(): Datastore;
    filestore(): Filestore;
    zcql(): ZCQL;
    email(): Email;
    search(): Search;
    functions(): Functions;
    userManagement(): UserManagement;
    pushNotification(): PushNotification;
    zia(): Zia;
    circuit(): Circuit;
    smartbrowz(): Smartbrowz;
    quickML(): QuickML;
    pipeline(): Pipeline;
    nosql(): NoSQL;
    stratus(): Stratus;
    connection(prop: string | {
        [x: string]: {
            [x: string]: string;
        };
    }): Connection;
    private ensureService;
}
export {};
